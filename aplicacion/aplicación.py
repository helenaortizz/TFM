# -*- coding: utf-8 -*-
"""Aplicaci√≥n.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_0tqv4twqjc_iE365o6uIo4l16wkvttw

## 1. Preparaci√≥n del entorno
"""

# Instalaci√≥n de librer√≠as
!pip install gradio joblib xgboost scikit-learn
import gradio as gr
import pandas as pd
import joblib

# Concexi√≥n con Google Colab
from google.colab import drive
drive.mount('/content/drive')

"""## 2. Cargar el modelo XGBoost"""

# Carga del modelo
file_path = '/content/drive/MyDrive/mejor_modelo_xgboost.pkl'
modelo_xgb = joblib.load(file_path)

# Comprobaci√≥n de modelo con pipeline creado
print(type(modelo_xgb))

"""## 3. Desarrollo de la aplicaci√≥n

#### 3.1. Diccionario de mapeos
"""

# Mapeos originales del modelo
age_map = {
    '<15 a√±os': '<15', '15-19 a√±os': '15-19', '20-24 a√±os': '20-24',
    '25-29 a√±os': '25-29', '30-34 a√±os': '30-34', '35-39 a√±os': '35-39',
    '40-44 a√±os': '40-44', '45-49 a√±os': '45-49', '50-54 a√±os': '50-54'
}
race_map = {
    'Blanca': 'White', 'Negra': 'Black',
    'Ind√≠gena Americano/Nativo de Alaska': 'AIAN',
    'Asi√°tica': 'Asian', 'Isle√±a del Pac√≠fico': 'NHOPI',
    'Multiracial': 'Multiracial'
}
edu_map = {
    'Educaci√≥n Primaria': '‚â§8th',
    'Educaci√≥n Secundaria': '9-12_no_diploma',
    'Bachillerato': 'HS_diploma',
    'Estudios Pre-Universitarios': 'Some_college',
    'Grado Superior': 'Assoc_degree',
    'Graduado Universitario': 'Bachelor',
    'M√°ster Universitario': 'Master',
    'Doctorado': 'Doctorate',
    'Desconocido': 'Unknown'
}
bmi_map = {
    'Infrapeso': 'Underweight',
    'Normal': 'Normal',
    'Sobrepeso': 'Overweight',
    'Obesidad I': 'Obesity_I',
    'Obesidad II': 'Obesity_II',
    'Obesidad Extrema': 'Extreme_Obesity',
    'Desconocido': 'Unknown'
}
presentation_map = {
    'Cef√°lica': 1,
    'Pod√°lica': 2,
    'Transversa': 3,
    'Otros': 9
}
plurality_map = {
    '√önico': 1,
    'Gemelar': 2,
    'Trillizos': 3,
    'Orden Superior': 4
}
prenatal_map = {
    '1¬∫-3¬∫ mes (1-12 semanas)': 1,
    '4¬∫-6¬∫ mes (13-24 semanas)': 2,
    '7¬∫ mes o m√°s (25+ semanas)': 3,
    'Sin control prenatal': 4,
    'Desconocido': 5
}

"""#### 3.2. Funciones de predicci√≥n"""

# Funci√≥n de predicci√≥n de parto pret√©rmino
def predecir_parto_pretermino(
    age, race, education, birth_order, interval, prenatal_start, smoking,
    bmi, diabetes, hypertension, preterm, cesarean, no_risk, no_infect,
    chorio, presentation, plurality
):
    entrada = pd.DataFrame([{
        "Mother_Age": age_map[age],
        "Mother_Race": race_map[race],
        "Mother_Education": edu_map[education],
        "Total_Birth_Order": birth_order,
        "Interval_Last_Pregnancy": interval,
        "Prenatal_Care_Start": prenatal_map[prenatal_start],
        "Smoking_Before_Pregnancy": smoking,
        "BMI": bmi_map[bmi],
        "Gestational_Diabetes": binario(diabetes),
        "Gestational_Hypertension": binario(hypertension),
        "Previous_Preterm_Birth": binario(preterm),
        "Previous_Cesarean": binario(cesarean),
        "No_Risk_Factors": binario(no_risk),
        "No_Infections": binario(no_infect),
        "Chorioamnionitis": binario(chorio),
        "Fetal_Presentation": presentation_map[presentation],
        "Plurality": plurality_map[plurality]
    }])

    proba = modelo_xgb.predict_proba(entrada)[0][1]
    pred = modelo_xgb.predict(entrada)[0]
    nivel = "ALTO" if pred == 1 else "BAJO"
    emoji = "üî¥" if pred == 1 else "üü¢"
    texto = f"{emoji} Riesgo estimado de parto pret√©rmino: {proba:.1%} ‚Üí {nivel}"

    porcentaje = round(proba * 100)
    return texto, porcentaje

# Funci√≥n auxiliar para respuestas binarias
def binario(valor):
    return 1 if valor == "S√≠" else 0

"""#### 3.3. Opciones de selecci√≥n"""

age_opts = ['<15 a√±os', '15-19 a√±os', '20-24 a√±os', '25-29 a√±os', '30-34 a√±os', '35-39 a√±os', '40-44 a√±os', '45-49 a√±os', '50-54 a√±os']
race_opts = ['Blanca', 'Negra', 'Ind√≠gena Americano/Nativo de Alaska', 'Asi√°tica', 'Isle√±a del Pac√≠fico', 'Multiracial']
edu_opts = ['Educaci√≥n Primaria', 'Educaci√≥n Secundaria', 'Bachillerato', 'Estudios Pre-Universitarios', 'Grado Superior', 'Graduado Universitario', 'M√°ster Universitario', 'Doctorado', 'Desconocido']
bmi_opts = ['Infrapeso', 'Normal', 'Sobrepeso', 'Obesidad I', 'Obesidad II', 'Obesidad Extrema', 'Desconocido']
pres_opts = ['Cef√°lica', 'Pod√°lica', 'Transversa', 'Otros']
plural_opts = ['√önico', 'Gemelar', 'Trillizos', 'Orden Superior']
birth_order_opts = list(range(1, 10))
prenatal_opts = list(prenatal_map.keys())

"""#### 3.4. Desarrollo de la interfaz"""

# Interfaz Gradio
with gr.Blocks(theme=gr.themes.Base()) as demo:
    gr.Markdown(
        "<h2 style='text-align:center; color:#2c3e50;'>Calculadora de Riesgo de Parto Pret√©rmino</h2>"
    )
    with gr.Row():
        age = gr.Dropdown(age_opts, label="Edad de la madre")
        race = gr.Dropdown(race_opts, label="Raza")
        education = gr.Dropdown(edu_opts, label="Nivel educativo")

    with gr.Row():
        birth_order = gr.Dropdown(birth_order_opts, label="N√∫mero de embarazos (contando actual)")
        interval = gr.Slider(0, 99, label="Meses desde el √∫ltimo embarazo", step=1)
        prenatal_start = gr.Dropdown(prenatal_opts, label="Inicio del cuidado prenatal (mes)")

    with gr.Row():
        smoking = gr.Slider(0, 20, label="Cigarrillos por d√≠a antes del embarazo", step=1)
        bmi = gr.Dropdown(bmi_opts, label="√çndice de Masa Corporal (IMC)")
        presentation = gr.Dropdown(pres_opts, label="Presentaci√≥n fetal")

    with gr.Row():
        plurality = gr.Dropdown(plural_opts, label="N√∫mero de fetos")
        diabetes = gr.Radio(["No", "S√≠"], label="¬øDiabetes gestacional?")
        hypertension = gr.Radio(["No", "S√≠"], label="¬øHipertensi√≥n gestacional?")

    with gr.Row():
        preterm = gr.Radio(["No", "S√≠"], label="¬øParto prematuro previo?")
        cesarean = gr.Radio(["No", "S√≠"], label="¬øCes√°rea previa?")
        no_risk = gr.Radio(["No", "S√≠"], label="¬øSin factores de riesgo?")

    with gr.Row():
        no_infect = gr.Radio(["No", "S√≠"], label="¬øSin infecciones?")
        chorio = gr.Radio(["No", "S√≠"], label="¬øCorioamnionitis?")

    gr.Markdown("---")
    btn = gr.Button("üîé Calcular riesgo", variant="primary")
    salida_texto = gr.Textbox(label="Resultado", lines=2, elem_classes="text-center")
    barra_riesgo = gr.Slider(0, 100, step=1, label="Visualizaci√≥n del riesgo (%)", interactive=False)

    btn.click(fn=predecir_parto_pretermino,
              inputs=[age, race, education, birth_order, interval, prenatal_start, smoking,
                      bmi, diabetes, hypertension, preterm, cesarean, no_risk, no_infect,
                      chorio, presentation, plurality],
              outputs=[salida_texto, barra_riesgo])

demo.launch()